- finding the kth largest/smallest in something, use the following:
    - sort (brute)
    - third variable linear comparison (optimal) (but for smaller values of k)
    - multi pass method (optimal) (but for higher values of k)
    - finding left or right leaders in the array (use technique of continuous max/min)

- checking sorted:
    -  use third variable comparison and check for switches

- duplicates checking/duplicates removal/duplicates count/etc:
    - ordered set (if sorted is important) (brute)
    - unordered set (if not important) (brute)
    - two pointer approach (optimal)

- array rotation concepts:
    - terminal wale elememts ko store karlo temp array mein 
    - internal elements ko push kardo inside the array for rotation  
    - terminal elememts ko last(left rotate)/first(right rotate) mein push kardo (brute)
    - use observation based on reversal (optimal)

- matrix rotation concepts:
    - see the code for the logic 
    - we can rotate any matrix by any angle, of clockwise or anticlockwise sense

- matrix traversal concepts:
    - given with some traversal conditions, then use top, bottom, left and right variables and then traverse accordingly 
    - use loops to make restrictions 

- two-pointer:
    - order maintain 
    - switch 
    - shift to the end  
    - removal duplicate in sorted array
    - union of sorted arrays 

- xor
    - finding missing number 
    - finding single number 

-union and intersection operations of arrays:
    - padhna hain

- subarrays:
    - brute force generation 
    - brute force continuous sum generation

- subarray length, with some condition (sum/other):

- subarray count, with some condition (sum/other):
    - prefix sum + hashing

- subarray property (sum/other), with some condition (maximum/other):

- subarray printing, with some condition (maximum/other), on some property(sum/other):

- permutation/subarray/subsequence:

- pairs/triplets/quadralets/further in array: {as the size increases, the time and space complexity increases}
    - brute force generation (brute)
    - hashing (optimal)
    - sorting with pointers (better)
    - others, depending on the problem

- rearranging the array in terms of pairs:
    - seperate in two arrays and then join both of them accordingly 
    - use two pointers approach

- longest/shortest consecutive subsequence, adhering to some condition:  (traverse and halt method)
    - traverse the array and while traversing check the condition:
        - if true, then perform operations 
        - if false, then give halt and restart and also find the answer
    - return the answer






important:
- we can copy containers from each other using:
    - constructer 
    - copy method 
- jab bhi samajh na ayein loop kaise lagana hain then infinite while loop lagake break karde 
- union and intersection of two ordered sets take linear time and the functions used are set_union and set_intersection 
- pascals triangle theory is an important implementation based question 






